#include <stddef.h>

#include "wasm_export.h"
{%- for include in includes %}
#include "{{ include }}"
{%- endfor %}

void wasm_libs_set_wasm_module_inst(wasm_module_inst_t module_inst);
{%- for library in libraries.values() %}
int wasm_libs_register_{{ library.name }}_natives(const char* env);
    {%- for handle in library.pointer_handles.values() %}
int wasm_libs_release_{{ library.name }}_{{ handle.name }}_pointer_handle(void* pointer);
    {%- endfor %}
{%- endfor %}

// forward declarations so that functions are well declared even if defined in user code
{%- for library in libraries.values() -%}
    {%- for function in library.functions.values() %}
{% if function.returns_pointer_handle() %}{{ library.pointer_handles[function.returned_pointer_handle].type }}{% else %}{{ function.return_type }}{% endif %} {{ function.original_name }}(
        {%- if function.parameters|length == 0 -%}void{%- endif -%}
        {%- for parameter in function.parameters.values() -%}
            {%- if parameter.is_function_handle() -%}
    {{ library.function_handles[parameter.function_handle].return_type }} (*{{ parameter.name }})(
                {%- if library.function_handles[parameter.function_handle].parameters|length == 0 -%}void{%- endif -%}
                {%- for parameter2 in library.function_handles[parameter.function_handle].parameters.values() -%}
       {{ parameter2.type }} {{ parameter2.name }}{%- if not loop.last %}, {% endif -%}
                {%- endfor -%}
    )
            {%- elif parameter.is_pointer_handle() -%}
    {{ library.pointer_handles[parameter.pointer_handle].type }}
            {%- else -%}
    {{ parameter.type }} {{ parameter.name }}
            {%- endif -%}
            {%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
);
    {%- endfor -%}
{%- endfor -%}